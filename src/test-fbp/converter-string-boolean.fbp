# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

custom_true_str(constant/string:value="CustomTrue")
custom_false_str(constant/string:value="CustomFalse")

true(constant/boolean:value=true)
true_str(constant/string:value=True)

true OUT -> IN true_to_str(converter/boolean-to-string) OUT -> IN[0] true_cmp(string/compare)
true_str OUT -> IN[1] true_cmp EQUAL -> RESULT true_converts_to_string(test/result)

true_to_str OUT -> IN str_to_true(converter/string-to-boolean)
str_to_true OUT -> RESULT string_converts_to_true(test/result)


false(constant/boolean:value=false)
false_str(constant/string:value=False)

false OUT -> IN false_to_str(converter/boolean-to-string) OUT -> IN[0] false_cmp(string/compare)
false_str OUT -> IN[1] false_cmp EQUAL -> RESULT false_converts_to_string(test/result)

false_to_str OUT -> IN str_to_false(converter/string-to-boolean)
str_to_false OUT -> IN not(boolean/not) OUT -> RESULT string_converts_to_false(test/result)


true OUT -> IN true_to_custom_str(converter/boolean-to-string:true_value="CustomTrue") OUT -> IN[0] custom_true_cmp(string/compare)
custom_true_str OUT -> IN[1] custom_true_cmp EQUAL -> RESULT custom_true_converts_to_string(test/result)

custom_false_str OUT -> FALSE_VALUE true_to_custom_port_str
custom_true_str OUT -> TRUE_VALUE true_to_custom_port_str(converter/boolean-to-string)
true OUT -> IN true_to_custom_port_str OUT -> IN[0] custom_true_port_cmp(string/compare)
custom_true_str OUT -> IN[1] custom_true_port_cmp EQUAL -> RESULT custom_true_port_converts_to_string(test/result)
